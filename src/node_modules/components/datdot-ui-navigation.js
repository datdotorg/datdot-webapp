const style_sheet = require('../support-style-sheet')
const message_maker = require('../message-maker')
const {i_button} = require('datdot-ui-button')

module.exports = navigation

function navigation ({page = '*', flow = 'ui-navigation', name, body = [], theme = {}}, protocol) {
    const recipients = []
    const make = message_maker(`${name} / ${flow} / ${page}`)
    
    function widget () {
        const role = 'tab'
        const send = protocol(get)
        const options = [
            {
                name: 'user',
                body: 'USER',
                controls: '#',
                current: false
            },
            {
                name: 'plans',
                body: 'PLANS',
                controls: '#',
                current: true
            },
            {
                name: 'jobs',
                body: 'JOBS',
                controls: '#',
            },
            {
                name: 'apps',
                body: 'APPS',
                controls: '#',
                disabled: true,
            }
        ]
        const el = document.createElement('i-nav')
        const shadow = el.attachShadow({mode: 'closed'})

        options.forEach( opt => {
            const tab = i_button({page, flow, role, name: opt.name.toLowerCase(), body: opt.name, current: opt.current, controls: opt.controls}, btn_protocol(opt.name.toLowerCase()))
            shadow.append(tab)
        })
       
        style_sheet(shadow, style)
        return el

        function handle_page_event (from, checked) {
            const state = !checked
            const type = state ? 'checked' : 'unchecked'
            send( make({to: 'content', type: 'page-changed', data: {page: from}}) )
            recipients[from](make({type, data: state}))
        }

        function btn_protocol (name) {
            return send => {
                recipients[name] = send
                return get
            }
        }

        function get (msg) {
            const {head, type, refs, meta, data} = msg
            const from = head[0].split(' / ')[0]
            if (type.match(/ready/)) return
            if (type.match(/click/)) return handle_page_event(from, data)
        }
    }

    const style = `
    :host(i-nav) {

    }
    `

    return widget()
}