const style_sheet = require('../../../support-style-sheet')
const message_maker = require('../../../message-maker')
const make_grid = require('../../../make-grid')
const make_element = require('../../../make-element')
const {i_button} = require('datdot-ui-button')
const L = require('leaflet')
const markerClusterGroup = require('Leaflet.markercluster')

module.exports = bubble_map

function bubble_map (opt, protocol) {
    const {page = '*', flow = 'ui-bubble-map', name = '.', body = undefined, hide = false, to = '#' } = opt
    const recipients = []
    const make = message_maker(`${name} / ${flow} / ${page}`)
    let hidden = hide

    function widget () {
        const send = protocol(get)
        const el = make_element({name: 'div', classlist: 'map'})
        const shadow = el.attachShadow({mode: 'closed'})
        style_sheet(shadow, style)

        const make_map = L.map('mapid').setView([51.505, -0.09], 13);
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: 'your.mapbox.access.token'
    }).addTo(mymap);
        // const map = L.markerClusterGroup()
        shadow.innerHTML = make_map
        
        return el

        function get (msg) {

        }

    }

    const style = `
    :host(.map) {
        --bg-color: var(--color-white);
        --opacity: 1;
        --border-width: 1px;
        --border-style: solid;
        --border-color: var(--color-black);
    }
    :host(.map[aria-hidden="true"]) {
        display: none;
    }
    :host(.map[aria-hidden="false"]) {
    }
    `

    return widget()
}