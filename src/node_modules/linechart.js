const bel = require('bel')
const Chart = require('chart.js');
const style_sheet = require('support-style-sheet')
const make_grid = require('make-grid')
const make_element = require('make-element')
const message_maker = require('message-maker')

module.exports = line_chart
function line_chart () {

  function widget() {
    const el = make_element({name: 'div', classlist: 'chart-section'})
    const shadow = el.attachShadow({mode: 'closed'})
    const canvas = bel`<canvas></canvas>`
    style_sheet(shadow, style)
    
    const data = {
      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
      datasets: [
        {
          label: 'CPU',
          data: [65, 59, 50, 81, 46, 55, 40],
          fill: false,
          borderColor: 'hsl(348, 96%, 71%)',
          backgroundColor: 'hsl(348, 96%, 71%)'
        },
        {
          label: 'RAM',
          data: [7, 25, 12, 15, 22, 34, 15],
          fill: false,
          borderColor: 'hsl(180, 54%, 43%)',
          backgroundColor: 'hsl(180, 54%, 43%)'
        },
        {
          label: 'HDD',
          data: [48, 36, 22, 15, 47, 44, 55],
          fill: false,
          borderColor: 'hsl(205, 96%, 72%)',
          backgroundColor: 'hsl(205, 96%, 72%)'
        },
        {
          label: 'Legend',
          data: [38, 32, 52, 65, 47, 64, 45],
          fill: false,
          borderColor: 'hsl(108, 100%, 28%)',
          backgroundColor: 'hsl(108, 100%, 28%)'
        },
        {
          label: 'Price',
          data: [8, 6, 12, 25, 37, 14, 5],
          fill: false,
          borderColor: 'hsl(248, 56%, 59%)',
          backgroundColor: 'hsl(248, 56%, 59%)'
        },
        {
          label: 'Download',
          data: [85, 60, 72, 92, 110, 85, 95],
          fill: false,
          borderColor: 'hsl(213, 90%, 59%)',
          backgroundColor: 'hsl(213, 90%, 59%)'
        },
        {
          label: 'Upload',
          data: [25, 30, 42, 22, 11, 35, 15],
          fill: false,
          borderColor: 'hsl(39, 100%, 50%)',
          backgroundColor: 'hsl(39, 100%, 50%)'
        },
        {
          label: 'Latency',
          data: [0.1, 1.25, 0.08, 0.7, 0.5, 1, 1.5],
          fill: false,
          borderColor: 'hsl(15, 80%, 50%)',
          backgroundColor: 'hsl(15, 80%, 50%)'
        }
      ]
    }

    const chartOptions = {
      responsive: true,
      maintainAspectRatio: false,
      interaction: {
        intersect: false,
        mode: 'index',
      },
      plugins: {
        legend: {
          display: true,
          position: 'bottom',
          labels: {
            boxWidth: 8,
            color: '#888'
          }
        },
        chartAreaBorder: {
          borderColor: 'hsla(var(--color-black))',
          borderWidth: 1,
        }
      }
    }

    const chartAreaBorder = {
      id: 'chartAreaBorder',
      beforeDraw(chart, args, options) {
        const {ctx, chartArea: {left, top, width, height}} = chart;
        ctx.save();
        ctx.strokeStyle = options.borderColor;
        ctx.lineWidth = options.borderWidth;
        ctx.setLineDash(options.borderDash || []);
        ctx.lineDashOffset = options.borderDashOffset;
        ctx.strokeRect(left, top, width, height);
        ctx.restore();
      }
    };
    

    shadow.append(canvas)

    document.addEventListener('DOMContentLoaded', ()=> {
      const chart = new Chart(canvas, {
        type: 'line',
        data,
        options: chartOptions,
        plugins: [chartAreaBorder]
      })
      // todo: must to add this to make canvas resize
      window.addEventListener('resize', () => {
        canvas.clientHeight = el.clientHeight
      })
    })

    return el
  }
  
  const style = `
  :host( .chart-section ) {
    height: 100%
  }
  canvas {
    display: grid !important;
    width: 100% !important;
    background-color: hsl(var(--color-white));
  }
  `
  return widget()
}